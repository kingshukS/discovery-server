server.port=8761

## eureka server is a client too, which is trying to register itself with other eureka server available and fetches registry.
## we are making it false as this is the only server up in local environment, no other instances are available of Eureka server.
## also, the exception appears in the console doesn't stop Eureka from running, it's just showing no other server is found and unable to connect to other available Eurekas.
eureka.client.register-with-eureka=false
eureka.client.fetch-registry=false

# eureka.client.service-url.defaultZone=http://localhost:8761/eureka/

## Set the property when deploying two eureka instances.
# eureka.server.renewalPercentThreshold=0.49

## Turning off self-preservation will kick-off the instances if heartbeat misses immediately after the timeout happens. Not advisable because the service may be up and running
## but missed to send the heartbeat due to some temporary network hiccups. link: https://stackoverflow.com/questions/33921557/understanding-spring-cloud-eureka-server-self-preservation-and-renew-threshold
# eureka.server.enableSelfPreservation=false

spring.cloud.config.uri=http://localhost:8888
spring.application.name=discovery-server
spring.profiles.active=dev
